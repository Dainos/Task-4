{"version":3,"sources":["serviceWorker.js","actions/actions.js","reducers/Reducer.js","sagas.js","store/Store.js","TableEntry.jsx","DataTable.jsx","DataChart.jsx","AlertDialog.jsx","MainPage.jsx","DataPage.jsx","index.js"],"names":["Boolean","window","location","hostname","match","CHANGE_TAB","CHANGE_TIME","STOP_TIMER","SET_TIMER","ADD_DATA","UPDATE_NAME","DELETE_DATA","ALERT","RESTART_TIMER","reducer","state","localStorage","length","initialState","persistedState","action","type","actions","currentTab","payload","currentTime","timerId","dateStart","timeStart","timeEnd","table","currentName","showAlert","time","helloSaga","console","log","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","getItem","JSON","parse","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","next","run","withRouter","item","index","deleteData","history","TableRow","map","TableCell","key","Button","variant","onClick","push","DataTable","Table","TableHead","TableBody","generator","amount","Math","floor","random","newTable","i","duration","hours","minutes","timeForm","hoursStart","minutesStart","durMinutes","durHours","DataChart","props","data","timeData","split","name","width","height","margin","top","right","left","bottom","dataKey","stroke","barSize","fill","label","color","AlertDialog","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","handle","MainPage","changeTab","startTimer","changeTime","setTimer","setInterval","date","Date","seconds","getSeconds","getMinutes","getHours","timeFormat","stopTimer","addData","clearTimeout","date2","timeRender","timeString","alert","restartTimer","localState","newCurrentDate","newCurrentSeconds","subTime","newCurrentTime","t1","t2","delData","splice","buttons","handleInput","event","updateName","target","value","this","tabs","Grid","container","direction","justify","alignItems","TextField","id","onChange","Tabs","indicatorColor","textColor","Tab","Component","connect","dispatch","tab","timeriD","DataPage","getState","params","undefined","app","basename","path","exact","component","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e216744.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_TIME = 'CHANGE_TIME'\nexport const STOP_TIMER = 'STOP_TIMER'\nexport const SET_TIMER = 'SET_TIMER'\nexport const ADD_DATA = 'ADD_DATA'\nexport const UPDATE_NAME = 'UPDATE_NAME'\nexport const DELETE_DATA = 'DELETE_DATA'\nexport const ALERT = 'ALERT'\nexport const RESTART_TIMER = 'RESTART_TIMER'\n\nconst changeTab = (tab) => {    \n    return {\n        type: CHANGE_TAB,\n        payload: tab\n    }\n}\nconst changeTime = time => {    \n    return {\n        type: CHANGE_TIME,\n        payload: time\n    }\n}\nconst setTimer = timeriD => {    \n    return {\n        type: SET_TIMER,\n        payload: timeriD\n    }\n}\nconst stopTimer = (timeEnd) => {    \n    return {\n        type: STOP_TIMER,\n        payload: timeEnd\n    }\n}\nconst addData = data => {    \n    return {\n        type: ADD_DATA,\n        payload: data\n    }\n}\nconst updateName = name => {    \n    return {\n        type: UPDATE_NAME,\n        payload: name\n    }\n}\nconst alert = () => {    \n    return {\n        type: ALERT\n    }\n}\nconst deleteData = index => {    \n    return {\n        type: DELETE_DATA,\n        payload: index\n    }\n}\n\n\n\n\n\nexport {changeTab, changeTime, setTimer, stopTimer, addData, updateName, alert, deleteData}","import { initialState, persistedState } from '../store/Store'\nimport * as actions from '../actions/actions'\n\nfunction reducer(state = ( localStorage.length < 1 ? initialState : persistedState), action) {\n    switch (action.type) {\n        case actions.CHANGE_TAB:\n            return {...state, currentTab: action.payload}\n        case actions.CHANGE_TIME:\n            return {...state, currentTime: action.payload }\n        case actions.SET_TIMER:\n            return {...state, timerId: action.payload.timerId, dateStart: action.payload.dateStart, timeStart: action.payload.timeStart}\n        case actions.STOP_TIMER:\n            return {...state, timerId: null, currentTime: 0, timeEnd: action.payload }\n        case actions.ADD_DATA:\n            return {...state, table: [...state.table, [\n                state.table.length,\n                state.currentName,\n                state.timeStart,\n                state.timeEnd,\n                action.payload\n            ]], currentName: '' }\n            \n        case actions.UPDATE_NAME:\n            return {...state, currentName: action.payload }\n        case actions.ALERT : \n            return {...state, showAlert: !state.showAlert }\n        case actions.DELETE_DATA:\n            // state.table.splice(action.payload, 1)\n            return {...state, table: [...state.table]}\n        case actions.RESTART_TIMER: \n            return {...state, currentTime: action.payload.time, timerId: action.payload.timerId}\n        default: \n            return state\n    }\n}\n\n\nexport default reducer","export function* helloSaga() {\n    console.log('Hello Sagas!')\n  }","import { createStore, compose,  applyMiddleware } from 'redux' \nimport createSagaMiddleware from 'redux-saga'\nimport reducer from '../reducers/Reducer'\nimport { helloSaga } from '../sagas'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst initialState = {\n    currentTab: 0,\n    currentTime: 0,\n    currentName: '',\n    timerId: null,\n    timeStart: null,\n    timeEnd: null,\n    dateStart: null,\n    table: [],\n    showAlert: false\n}\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst customMiddleware = store => next => action => {\n    const res = next(action)\n    return res\n}\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(customMiddleware, sagaMiddleware)));\n\nsagaMiddleware.run(helloSaga)\n\nexport { store, initialState, persistedState }\n\n","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router-dom'\n\n\n\nconst TableEntry = ({ item, index, deleteData, history }) => {\n    return (\n        <TableRow>\n            {item.map((item, index) => <TableCell key={index}>{item}</TableCell>)}    \n            <TableCell><Button variant=\"contained\" type=\"submit\" onClick={() => {history.push(`/tasks/${index}`)}}>Info</Button></TableCell>\n            <TableCell><Button variant=\"contained\" type=\"submit\" onClick={ () => {deleteData(index)}}>Delete</Button></TableCell>                  \n        </TableRow>\n    )\n}\n\nexport default withRouter(TableEntry)","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableEntry from './TableEntry'\n\n\nconst DataTable = ({ table, deleteData }) => {\n\n    return (\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell>№</TableCell>\n                    <TableCell>Task</TableCell>\n                    <TableCell>Time Start</TableCell>\n                    <TableCell>Time End</TableCell>\n                    <TableCell>Time Spend</TableCell>\n                    <TableCell>Info</TableCell>\n                    <TableCell>Delete</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {table.map((item, index) => <TableEntry item={item} key={index} index={index} deleteData={deleteData}></TableEntry>)}\n            </TableBody>\n        </Table>\n    )\n}\n\nexport default DataTable","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Legend } from 'recharts';\nimport Button from '@material-ui/core/Button'\n\nconst DataChart = props => {\n\n    const { table } = props\n\n\n    const data = [];\n    const timeData = {};\n\n    for (let i = 0; i < 24; i++) timeData[i] = 0\n\n\n    for (let i = 1; i < table.length; i++) {\n        let hours = table[i][2].split(':')\n        let minutes = table[i][4].split(':')\n\n\n        timeData[+hours[0]] += +minutes[1]\n    }\n\n    for (let i = 0; i < 24; i++) {\n        data.push({ name: i, 'minutes of the hour': timeData[i] })\n    }\n\n    return (\n        <div>\n            <BarChart width={1300} height={400} data={data} margin={{ top: 50, right: 30, left: 20, bottom: 5 }}>\n                <XAxis dataKey=\"name\" stroke=\"#8884d8\" />\n                <YAxis />\n                <Legend />\n                <Bar type=\"monotone\" dataKey=\"minutes of the hour\" barSize={20} fill=\"#8884d8\"\n                    label='label' />\n            </BarChart>\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={generator}>GENERATE</Button>\n        </div>\n\n    )\n}\n\nconst generator = () => {\n    const amount = Math.floor(Math.random()*5+10)\n    const newTable = []\n    \n    for(let i = 0; i < amount; i++) {\n\n        newTable.push([])\n        const duration = Math.floor(Math.random()*80+10)\n        const hours = Math.floor(Math.random()*23)\n        const minutes = Math.floor(Math.random()*59)\n        newTable[i][0] = i\n        newTable[i][1] = 'Random name'\n        newTable[i][2] = timeForm(hours, minutes, duration).timeStart\n        newTable[i][3] = timeForm(hours, minutes, duration).timeEnd\n        newTable[i][4] = timeForm(hours, minutes, duration).duration\n    }\n    console.log(newTable)\n}\n\nconst timeForm = (hoursStart, minutesStart, duration) => {\n    let hours = hoursStart\n    let minutes = minutesStart + duration;\n    if (minutes > 59) {\n        minutes-= 60\n        hours++\n        if (hours > 23) hours = 0         \n    }\n    let durMinutes = duration\n    let durHours = 0\n    if (durMinutes > 60) {\n        durMinutes-=60\n        durHours++\n    }\n    return {\n        timeStart: `${hoursStart < 10 ? '0'+hoursStart : hoursStart}:${minutesStart < 10 ? '0'+minutesStart : minutesStart}:00`,\n        timeEnd: `${hours < 10 ? '0'+hours : hours}:${minutes < 10 ? '0'+minutes : minutes}:00`,\n        duration: `${durHours < 10 ? '0'+durHours : durHours}:${durMinutes < 10 ? '0'+durMinutes : durMinutes}:00`\n    }\n}\n\nexport default DataChart","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\n\nconst AlertDialog = (props) => {\n\n    \n\n    return (\n        <Dialog open={props.open} color=\"primary\">\n            <DialogTitle color=\"primary\">Empty task name</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    You are trying close your task without name, enter the title and try again!\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" onClick={props.handle}>CLOSE</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default AlertDialog","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport * as actions from './actions/actions'\nimport DataTable from './DataTable'\nimport DataChart from './DataChart'\nimport AlertDialog from './AlertDialog'\n\n\n\n\nclass MainPage extends Component {\n\n    changeTab = () => {\n        const { currentTab, changeTab } = this.props\n        if (currentTab === 1) changeTab(0)\n        else changeTab(1)\n    }\n\n    startTimer = () => {\n        const { currentTime, changeTime, setTimer } = this.props\n        let time = currentTime\n        let timerId = setInterval(() => {\n            changeTime(++time)\n        }, 1000)\n\n        const date = new Date()\n        const dateStart = {\n            seconds: date.getSeconds(),\n            minutes: date.getMinutes(),\n            hours: date.getHours(),\n            timeStart: this.timeFormat(date.getSeconds(), date.getMinutes(), date.getHours()),\n            timerId\n        }\n\n        setTimer(dateStart)\n    }\n\n\n    stopTimer = () => {\n        const { timerId, stopTimer, addData, currentName } = this.props\n\n        if (currentName === '') {\n            this.alert()\n            return\n        }\n        clearTimeout(timerId)\n        const date2 = new Date()\n        const timeEnd = this.timeFormat(date2.getSeconds(), date2.getMinutes(), date2.getHours())\n        stopTimer(timeEnd)\n        addData(this.timeRender().timeString)\n    }\n\n    restartTimer = () => {\n        const localState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\n        const { dateStart, changeTime, restartTimer, currentTime } = this.props\n\n        if (dateStart === null) return\n\n        const newCurrentDate = new Date()\n        let newCurrentSeconds = this.subTime(newCurrentDate.getSeconds(), dateStart.seconds) + this.subTime(newCurrentDate.getMinutes(), dateStart.minutes) * 60 + this.subTime(newCurrentDate.getHours(), dateStart.hours) * 3600\n\n        if (localState.timerId !== null && newCurrentSeconds > currentTime) {\n\n            clearTimeout(localState.table.timerId)\n\n            console.log(currentTime)\n\n            let newCurrentTime = this.timeFormat(this.subTime(newCurrentDate.getSeconds(), dateStart.seconds), this.subTime(newCurrentDate.getMinutes(), dateStart.minutes), this.subTime(newCurrentDate.getHours(), dateStart.hours))\n            let timerId = setInterval(() => { changeTime(++newCurrentSeconds) }, 1000)\n            console.log(this.subTime(newCurrentDate.getSeconds(), this.timeRender().seconds))\n            restartTimer(newCurrentTime, timerId)\n        }\n    }\n\n    subTime = (t1, t2) => {\n        if (t1 >= t2) return t1 - t2\n        else return t1 - t2 + 60\n    }\n\n\n    delData = index => {\n        const { table, deleteData } = this.props\n        table.splice(index, 1)\n        deleteData(index)\n    }\n\n    buttons = () => {\n        if (this.props.timerId == null) return <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={this.startTimer}>Start</Button>\n        else return <Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={this.stopTimer}>Stop</Button>\n    }\n\n    handleInput = (event) => {\n        this.props.updateName(event.target.value)\n    }\n\n\n    timeFormat = (seconds, minutes, hours) => {\n        if (hours < 10) hours = '0' + hours\n        if (minutes < 10) minutes = '0' + minutes\n        if (seconds < 10) seconds = '0' + seconds\n\n        return `${hours}:${minutes}:${seconds}`\n    }\n\n    timeRender = () => {\n        let time = this.props.currentTime, seconds, minutes, hours\n        if (time < 60) {\n            seconds = time\n            minutes = 0\n            hours = 0\n        }\n        else if (time < 3600) {\n            minutes = Math.floor(time / 60)\n            seconds = time % 60\n            hours = 0\n        }\n        else {\n            hours = Math.floor(time / 3600)\n            minutes = Math.floor(time % 3600 / 60)\n            seconds = Math.floor(time % 3600 % 60)\n        }\n\n\n        return {\n            timeString: this.timeFormat(seconds, minutes, hours),\n            seconds,\n            minutes,\n            hours\n        }\n\n    }\n\n    alert = () => {\n        console.log('trying alert')\n        this.props.alert()\n    }\n\n    render() {\n\n        const { currentTab, currentName, table, showAlert } = this.props\n        const tabs = [\n            (<DataTable table={table} deleteData={this.delData} />),\n            (<DataChart table={table} />)\n        ]\n\n        // this.restartTimer()\n\n\n        return (\n            <div>\n                <AlertDialog open={showAlert} handle={this.alert} />\n                <Grid container\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\">\n                    <TextField id=\"standard-basic\" value={currentName} label=\"Name of your task\" color=\"primary\" onChange={this.handleInput} />\n                    <h1>{this.timeRender().timeString}</h1>\n                    {this.buttons()}\n                </Grid>\n                <Tabs\n                    value={currentTab}\n                    indicatorColor=\"secondary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    onChange={this.changeTab}\n                >\n                    <Tab label=\"TASKS LOG\"></Tab>\n                    <Tab label=\"TASKS CHART\"></Tab>\n                </Tabs>\n                {tabs[currentTab]}\n\n            </div>\n        )\n    }\n}\n\nconst stateToProps = (state) => {\n\n    return {\n        currentTab: state.currentTab,\n        currentTime: state.currentTime,\n        currentName: state.currentName,\n        timerId: state.timerId,\n        dateStart: state.dateStart,\n        table: state.table,\n        showAlert: state.showAlert\n    }\n}\n\nconst dispatchToProps = (dispatch) => {\n\n    return {\n        changeTab: (tab) => dispatch(actions.changeTab(tab)),\n        changeTime: time => dispatch(actions.changeTime(time)),\n        setTimer: (timeriD) => dispatch(actions.setTimer(timeriD)),\n        stopTimer: (timeEnd) => dispatch(actions.stopTimer(timeEnd)),\n        addData: (data) => dispatch(actions.addData(data)),\n        updateName: (name) => dispatch(actions.updateName(name)),\n        alert: () => dispatch(actions.alert()),\n        deleteData: (index) => dispatch(actions.deleteData(index)),\n    }\n\n}\n\nexport default connect(stateToProps, dispatchToProps)(MainPage);\n","import React from 'react'\nimport { store } from './store/Store'\n\n\nconst DataPage = (props) => {\n    const data = store.getState().table[props.match.params.index]\n    if (data === undefined) return <h1>404 not found</h1>\n    console.log(data)\n    return (\n        <div>\n            <h1>Task: {data[1]}</h1>\n            <h1>Time Start: {data[2]}</h1>\n            <h1>Time End: {data[3]}</h1>\n            <h1>Time Spend {data[4]}</h1>\n        </div>\n    )\n}\nexport default DataPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { Switch, BrowserRouter, Route, HashRouter } from 'react-router-dom'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/Store'\nimport MainPage from './MainPage'\nimport DataPage from './DataPage'\n\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <HashRouter basename='/'>\n                <Switch>\n                    <Route path='/' exact component={MainPage} />\n                    <Route path={`/tasks/:index`} exact component={DataPage} />\n                    <Route render={() => <h1>404 not found</h1>} />\n                </Switch>\n             </HashRouter>\n        </BrowserRouter>       \n    </Provider>\n)\n\n\n\n// store.subscribe(()=> {\n//     localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n// })\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}